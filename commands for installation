# Install unzip and AWS CLI v2
apt update && apt install unzip -y
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
aws --version

# Install eksctl
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
mv /tmp/eksctl /usr/local/bin
eksctl version

# Install kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x kubectl
mv kubectl /usr/local/bin
kubectl version --client

# Configure AWS CLI
aws configure
# Enter your AWS access key, secret key, region, and output format as prompted.

# Create an Amazon EKS cluster
eksctl create cluster --name "mycluster" --version 1.28 --zones=ap-south-2a,ap-south-2b,ap-south-2c --without-nodegroup
kubectl cluster-info
eksctl utils associate-iam-oidc-provider --region ap-south-2 --cluster mycluster --approve

# Create a node group for the cluster
eksctl create nodegroup --cluster=mycluster --region=ap-south-2 \
--name=mycluster-ng-1 --node-type=t3.micro \
--nodes=2 --nodes-min=2 --nodes-max=4 --node-volume-size=20 \
--ssh-access  --ssh-public-key=hyd.keyfile \
--managed --asg-access --external-dns-access --full-ecr-access \
--appmesh-access --alb-ingress-access

# Verify cluster and nodes
kubectl get nodes

# Deploy a sample workload (nginx)
kubectl run nginx --image nginx
kubectl get pods

# Expose nginx service
kubectl expose pod nginx --port 80 --type NodePort
kubectl get svc

# Delete node group and cluster (for reference)
eksctl delete nodegroup --cluster mycluster --name mycluster-ng-1
eksctl delete cluster --name=mycluster
